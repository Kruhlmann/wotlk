{"version":3,"file":"sim-287625dc.chunk.js","sources":["../../../ui/warlock/presets.ts","../../../ui/warlock/inputs.ts","../../../ui/warlock/sim.ts"],"sourcesContent":["import {\n\tConsumes,\n\tFlask,\n\tFood,\n\tPetFood,\n\tGlyphs,\n\tEquipmentSpec,\n\tPotions,\n\tRaidBuffs,\n\tIndividualBuffs,\n\tDebuffs,\n\tTristateEffect,\n\tFaction,\n\tSpec,\n} from '../core/proto/common.js';\nimport { SavedRotation, SavedTalents } from '../core/proto/ui.js';\nimport { Player } from '../core/player.js';\n\nimport {\n\tWarlock_Rotation as WarlockRotation,\n\tWarlock_Options as WarlockOptions,\n\tWarlock_Rotation_PrimarySpell as PrimarySpell,\n\tWarlock_Rotation_SecondaryDot as SecondaryDot,\n\tWarlock_Rotation_SpecSpell as SpecSpell,\n\tWarlock_Rotation_Curse as Curse,\n\tWarlock_Options_WeaponImbue as WeaponImbue,\n\tWarlock_Options_Armor as Armor,\n\tWarlock_Options_Summon as Summon,\n\tWarlockMajorGlyph as MajorGlyph,\n\tWarlockMinorGlyph as MinorGlyph,\n} from '../core/proto/warlock.js';\nimport { APLRotation } from '../core/proto/apl.js';\n\nexport const BIS_TOOLTIP = 'This gear preset is inspired from Zephan\\'s Affliction guide: https://www.warcrafttavern.com/wotlk/guides/pve-affliction-warlock/';\n\n// Default talents. Uses the wowhead calculator format, make the talents on\n// https://wowhead.com/wotlk/talent-calc and copy the numbers in the url.\n\nexport const AfflictionTalents = {\n\tname: 'Affliction',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '2350002030023510253500331151--550000051',\n\t\tglyphs: Glyphs.create({\n\t\t\tmajor1: MajorGlyph.GlyphOfQuickDecay,\n\t\t\tmajor2: MajorGlyph.GlyphOfLifeTap,\n\t\t\tmajor3: MajorGlyph.GlyphOfHaunt,\n\t\t\tminor1: MinorGlyph.GlyphOfSouls,\n\t\t\tminor2: MinorGlyph.GlyphOfDrainSoul,\n\t\t\tminor3: MinorGlyph.GlyphOfSubjugateDemon,\n\t\t}),\n\t}),\n};\n\nexport const DemonologyTalents = {\n\tname: 'Demonology',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '-203203301035012530135201351-550000052',\n\t\tglyphs: Glyphs.create({\n\t\t\tmajor1: MajorGlyph.GlyphOfLifeTap,\n\t\t\tmajor2: MajorGlyph.GlyphOfQuickDecay,\n\t\t\tmajor3: MajorGlyph.GlyphOfFelguard,\n\t\t\tminor1: MinorGlyph.GlyphOfSouls,\n\t\t\tminor2: MinorGlyph.GlyphOfDrainSoul,\n\t\t\tminor3: MinorGlyph.GlyphOfSubjugateDemon,\n\t\t}),\n\t}),\n};\n\nexport const DestructionTalents = {\n\tname: 'Destruction',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '-03310030003-05203205210331051335230351',\n\t\tglyphs: Glyphs.create({\n\t\t\tmajor1: MajorGlyph.GlyphOfConflagrate,\n\t\t\tmajor2: MajorGlyph.GlyphOfLifeTap,\n\t\t\tmajor3: MajorGlyph.GlyphOfIncinerate,\n\t\t\tminor1: MinorGlyph.GlyphOfSouls,\n\t\t\tminor2: MinorGlyph.GlyphOfDrainSoul,\n\t\t\tminor3: MinorGlyph.GlyphOfSubjugateDemon,\n\t\t}),\n\t}),\n};\n\nexport const AfflictionRotation = WarlockRotation.create({\n\tprimarySpell: PrimarySpell.ShadowBolt,\n\tsecondaryDot: SecondaryDot.UnstableAffliction,\n\tspecSpell: SpecSpell.Haunt,\n\tcurse: Curse.Agony,\n\tcorruption: true,\n\tuseInfernal: false,\n\tdetonateSeed: true,\n});\n\nexport const DemonologyRotation = WarlockRotation.create({\n\tprimarySpell: PrimarySpell.ShadowBolt,\n\tsecondaryDot: SecondaryDot.Immolate,\n\tspecSpell: SpecSpell.NoSpecSpell,\n\tcurse: Curse.Doom,\n\tcorruption: true,\n\tuseInfernal: false,\n\tdetonateSeed: true,\n});\n\nexport const DestructionRotation = WarlockRotation.create({\n\tprimarySpell: PrimarySpell.Incinerate,\n\tsecondaryDot: SecondaryDot.Immolate,\n\tspecSpell: SpecSpell.ChaosBolt,\n\tcurse: Curse.Doom,\n\tcorruption: false,\n\tuseInfernal: false,\n\tdetonateSeed: true,\n});\n\nexport const AfflictionOptions = WarlockOptions.create({\n\tarmor: Armor.FelArmor,\n\tsummon: Summon.Felhunter,\n\tweaponImbue: WeaponImbue.GrandSpellstone,\n});\n\nexport const DemonologyOptions = WarlockOptions.create({\n\tarmor: Armor.FelArmor,\n\tsummon: Summon.Felguard,\n\tweaponImbue: WeaponImbue.GrandSpellstone,\n});\n\nexport const DestructionOptions = WarlockOptions.create({\n\tarmor: Armor.FelArmor,\n\tsummon: Summon.Imp,\n\tweaponImbue: WeaponImbue.GrandFirestone,\n});\n\nexport const DefaultConsumes = Consumes.create({\n\tflask: Flask.FlaskOfTheFrostWyrm,\n\tfood: Food.FoodFishFeast,\n\tpetFood: PetFood.PetFoodSpicedMammothTreats,\n\tdefaultPotion: Potions.PotionOfWildMagic,\n\tprepopPotion: Potions.PotionOfWildMagic,\n});\n\nexport const DefaultRaidBuffs = RaidBuffs.create({\n\tgiftOfTheWild: TristateEffect.TristateEffectImproved,\n\tpowerWordFortitude: TristateEffect.TristateEffectImproved,\n\tstrengthOfEarthTotem: TristateEffect.TristateEffectImproved,\n\tarcaneBrilliance: true,\n\tdivineSpirit: true,\n\ttrueshotAura: true,\n\tleaderOfThePack: TristateEffect.TristateEffectImproved,\n\ticyTalons: true,\n\ttotemOfWrath: true,\n\tmoonkinAura: TristateEffect.TristateEffectImproved,\n\twrathOfAirTotem: true,\n\tsanctifiedRetribution: true,\n\tbloodlust: true,\n\tdemonicPact: 500,\n});\n\nexport const DefaultIndividualBuffs = IndividualBuffs.create({\n\tblessingOfKings: true,\n\tblessingOfWisdom: TristateEffect.TristateEffectImproved,\n\tblessingOfMight: TristateEffect.TristateEffectImproved,\n\tvampiricTouch: true,\n});\n\nexport const DestroIndividualBuffs = IndividualBuffs.create({\n\tblessingOfKings: true,\n\tblessingOfWisdom: TristateEffect.TristateEffectImproved,\n\tblessingOfMight: TristateEffect.TristateEffectImproved,\n});\n\nexport const DefaultDebuffs = Debuffs.create({\n\tsunderArmor: true,\n\tfaerieFire: TristateEffect.TristateEffectImproved,\n\tbloodFrenzy: true,\n\tebonPlaguebringer: true,\n\theartOfTheCrusader: true,\n\tjudgementOfWisdom: true,\n});\n\nexport const DestroDebuffs = Debuffs.create({\n\tsunderArmor: true,\n\tfaerieFire: TristateEffect.TristateEffectImproved,\n\tbloodFrenzy: true,\n\tebonPlaguebringer: true,\n\theartOfTheCrusader: true,\n\tjudgementOfWisdom: true,\n\tshadowMastery: true,\n});\n\nexport const OtherDefaults = {\n\tdistanceFromTarget: 25,\n};\n\nexport const SWP_BIS = {\n\tname: 'Straight Outa SWP',\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\n\t\t{\"id\":34340,\"enchant\":3002,\"gems\":[34220,32215]},\n\t\t{\"id\":34204},\n\t\t{\"id\":31054,\"enchant\":2982,\"gems\":[32215,35760]},\n\t\t{\"id\":34242,\"enchant\":2621,\"gems\":[32196]},\n\t\t{\"id\":34364,\"enchant\":2661,\"gems\":[32196,35488,32196]},\n\t\t{\"id\":34436,\"enchant\":2650,\"gems\":[35760,0]},\n\t\t{\"id\":34344,\"enchant\":2937,\"gems\":[35760,32196,0]},\n\t\t{\"id\":34541,\"gems\":[35760,0]},\n\t\t{\"id\":34181,\"enchant\":2748,\"gems\":[32196,32196,35760]},\n\t\t{\"id\":34564,\"enchant\":2940,\"gems\":[35760]},\n\t\t{\"id\":34362,\"enchant\":2928},\n\t\t{\"id\":34230,\"enchant\":2928},\n\t\t{\"id\":32483},\n\t\t{\"id\":34429},\n\t\t{\"id\":34336,\"enchant\":2672},\n\t\t{\"id\":34179},\n\t\t{\"id\":34347,\"gems\":[35760]}\n  ]}`),\n};\nexport const P1_PreBiS_11 = {\n\tname: 'Pre-Raid Affliction',\n\ttooltip: BIS_TOOLTIP,\n\tenableWhen: (player: Player<Spec.SpecWarlock>) => player.getTalentTree() == 0,\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\n\t\t{\"id\":44910,\"enchant\":3820,\"gems\":[41285,39998]},\n\t\t{\"id\":42647,\"gems\":[39998]},\n\t\t{\"id\":34210,\"enchant\":3810,\"gems\":[39998,40051]},\n\t\t{\"id\":41610,\"enchant\":3722},\n\t\t{\"id\":39497,\"enchant\":3832,\"gems\":[39998,40051]},\n\t\t{\"id\":37361,\"enchant\":2332,\"gems\":[0]},\n\t\t{\"id\":42113,\"enchant\":3604,\"gems\":[0]},\n\t\t{\"id\":40696,\"gems\":[40051,39998]},\n\t\t{\"id\":34181,\"enchant\":3719,\"gems\":[39998,39998,40051]},\n\t\t{\"id\":44202,\"enchant\":3606,\"gems\":[40026]},\n\t\t{\"id\":43253,\"gems\":[40026]},\n\t\t{\"id\":37694},\n\t\t{\"id\":40682},\n\t\t{\"id\":37873},\n\t\t{\"id\":45085,\"enchant\":3834},\n\t\t{\"id\":40698},\n\t\t{\"id\":34348,\"gems\":[39998]}\n  ]}`),\n}\nexport const P1_Preset_Demo_Destro = {\n\tname: 'P1 Demo / Destro',\n\ttooltip: BIS_TOOLTIP,\n\tenableWhen: (player: Player<Spec.SpecWarlock>) => player.getTalentTree() > 0,\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\n\t\t{\"id\":40421,\"enchant\":3820,\"gems\":[41285,40014]},\n\t\t{\"id\":44661,\"gems\":[40099]},\n\t\t{\"id\":40424,\"enchant\":3810,\"gems\":[40049]},\n\t\t{\"id\":44005,\"enchant\":3722,\"gems\":[40099]},\n\t\t{\"id\":40423,\"enchant\":3832,\"gems\":[40049,40014]},\n\t\t{\"id\":44008,\"enchant\":2332,\"gems\":[39998,0]},\n\t\t{\"id\":40420,\"enchant\":3604,\"gems\":[39998,0]},\n\t\t{\"id\":40561,\"gems\":[40014]},\n\t\t{\"id\":40560,\"enchant\":3719},\n\t\t{\"id\":40558,\"enchant\":3606},\n\t\t{\"id\":40399},\n\t\t{\"id\":40719},\n\t\t{\"id\":40432},\n\t\t{\"id\":40255},\n\t\t{\"id\":40396,\"enchant\":3834},\n\t\t{\"id\":39766},\n\t\t{\"id\":39712}\n  ]}`),\n}\n\n\n// will have only rare gems, but a Lightweave Embroidery on cloak.\nexport const P1_Preset_Affliction = {\n\tname: 'P1 Affliction',\n\ttooltip: BIS_TOOLTIP,\n\tenableWhen: (player: Player<Spec.SpecWarlock>) => player.getTalentTree() == 0,\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\n\t\t{\"id\":40421,\"enchant\":3820,\"gems\":[41285,40051]},\n\t\t{\"id\":44661,\"gems\":[40026]},\n\t\t{\"id\":40424,\"enchant\":3810,\"gems\":[39998]},\n\t\t{\"id\":44005,\"enchant\":3722,\"gems\":[40026]},\n\t\t{\"id\":40423,\"enchant\":3832,\"gems\":[39998,40051]},\n\t\t{\"id\":44008,\"enchant\":2332,\"gems\":[39998,0]},\n\t\t{\"id\":40420,\"enchant\":3604,\"gems\":[39998,0]},\n\t\t{\"id\":40561,\"gems\":[39998]},\n\t\t{\"id\":40560,\"enchant\":3719},\n\t\t{\"id\":40558,\"enchant\":3606},\n\t\t{\"id\":40399},\n\t\t{\"id\":40719},\n\t\t{\"id\":40432},\n\t\t{\"id\":40255},\n\t\t{\"id\":40396,\"enchant\":3834},\n\t\t{\"id\":39766},\n\t\t{\"id\":39712}\n  ]}`),\n}\n\n\nexport const P1_PreBiS_14 = {\n\tname: 'Pre-Raid',\n\ttooltip: BIS_TOOLTIP,\n\tenableWhen: (player: Player<Spec.SpecWarlock>) => player.getTalentTree() > 0,\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\n\t\t{\"id\":44910,\"enchant\":3820,\"gems\":[41285,39998]},\n\t\t{\"id\":42647,\"gems\":[40049]},\n\t\t{\"id\":34210,\"enchant\":3810,\"gems\":[39998,40014]},\n\t\t{\"id\":41610,\"enchant\":3722},\n\t\t{\"id\":39497,\"enchant\":3832,\"gems\":[39998,40014]},\n\t\t{\"id\":37361,\"enchant\":2332,\"gems\":[0]},\n\t\t{\"id\":42113,\"enchant\":3604,\"gems\":[0]},\n\t\t{\"id\":40696,\"gems\":[40014,39998]},\n\t\t{\"id\":34181,\"enchant\":3719,\"gems\":[39998,39998,40014]},\n\t\t{\"id\":44202,\"enchant\":3606,\"gems\":[40026]},\n\t\t{\"id\":43253,\"gems\":[40026]},\n\t\t{\"id\":37694},\n\t\t{\"id\":40682},\n\t\t{\"id\":37873},\n\t\t{\"id\":45085,\"enchant\":3834},\n\t\t{\"id\":40698},\n\t\t{\"id\":34348,\"gems\":[39998]}\n  ]}`),\n}\n\nexport const P2_Preset_Affliction = {\n\tname: 'P2 Affliction',\n\ttooltip: BIS_TOOLTIP,\n\tenableWhen: (player: Player<Spec.SpecWarlock>) => player.getTalentTree() == 0,\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\n\t\t{\"id\":45497,\"enchant\":3820,\"gems\":[41285,45883]},\n\t\t{\"id\":45133,\"gems\":[40051]},\n\t\t{\"id\":46068,\"enchant\":3810,\"gems\":[39998,40049]},\n\t\t{\"id\":45618,\"enchant\":3722,\"gems\":[40026]},\n\t\t{\"id\":46137,\"enchant\":1144,\"gems\":[39998,40014]},\n\t\t{\"id\":45446,\"enchant\":2332,\"gems\":[39998,0]},\n\t\t{\"id\":45665,\"enchant\":3604,\"gems\":[39998,39998,0]},\n\t\t{\"id\":45619,\"enchant\":3601,\"gems\":[40051,40051,39998]},\n\t\t{\"id\":46139,\"enchant\":3872,\"gems\":[39998,39998]},\n\t\t{\"id\":45135,\"enchant\":3606,\"gems\":[39998,40051]},\n\t\t{\"id\":45495,\"gems\":[40026]},\n\t\t{\"id\":46046,\"gems\":[39998]},\n\t\t{\"id\":45518},\n\t\t{\"id\":45466},\n\t\t{\"id\":45620,\"enchant\":3834,\"gems\":[39998]},\n\t\t{\"id\":45617},\n\t\t{\"id\":45294,\"gems\":[40051]}\n\t]}`),\n}\n\nexport const P2_Preset_Demo_Destro = {\n\tname: 'P2 Demo / Destro',\n\ttooltip: BIS_TOOLTIP,\n\tenableWhen: (player: Player<Spec.SpecWarlock>) => player.getTalentTree() > 0,\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\n\t\t{\"id\":45497,\"enchant\":3820,\"gems\":[41285,45883]},\n\t\t{\"id\":45243,\"gems\":[39998]},\n\t\t{\"id\":46068,\"enchant\":3810,\"gems\":[39998,40051]},\n\t\t{\"id\":45618,\"enchant\":3722,\"gems\":[40026]},\n\t\t{\"id\":46137,\"enchant\":1144,\"gems\":[39998,40051]},\n\t\t{\"id\":45446,\"enchant\":2332,\"gems\":[39998,0]},\n\t\t{\"id\":45520,\"enchant\":3604,\"gems\":[39998,39998,0]},\n\t\t{\"id\":45619,\"enchant\":3601,\"gems\":[39998,39998,39998]},\n\t\t{\"id\":46139,\"enchant\":3872,\"gems\":[39998,39998]},\n\t\t{\"id\":45135,\"enchant\":3606,\"gems\":[39998,39998]},\n\t\t{\"id\":45495,\"gems\":[40026]},\n\t\t{\"id\":45297,\"gems\":[39998]},\n\t\t{\"id\":45518},\n\t\t{\"id\":45148},\n\t\t{\"id\":45620,\"enchant\":3834,\"gems\":[39998]},\n\t\t{\"id\":45617},\n\t\t{\"id\":45294,\"gems\":[39998]}\n\t]}`),\n}\n\nexport const P3_Preset_Affliction_Horde = {\n\tname: 'P3 Affliction H',\n\ttooltip: BIS_TOOLTIP,\n\tenableWhen: (player: Player<Spec.SpecWarlock>) => player.getTalentTree() == 0\n\t\t\t&& player.getFaction() == Faction.Horde,\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\n\t\t{\"id\":47796,\"enchant\":3820,\"gems\":[41285,40133]},\n\t\t{\"id\":47468,\"gems\":[40155]},\n\t\t{\"id\":47793,\"enchant\":3810,\"gems\":[40155]},\n\t\t{\"id\":47551,\"enchant\":3722,\"gems\":[40113]},\n\t\t{\"id\":47462,\"enchant\":1144,\"gems\":[40133,40155,40113]},\n\t\t{\"id\":47485,\"enchant\":2332,\"gems\":[40113,0]},\n\t\t{\"id\":47797,\"enchant\":3604,\"gems\":[40113,0]},\n\t\t{\"id\":47419,\"enchant\":3599,\"gems\":[40133,40113,40113]},\n\t\t{\"id\":47795,\"enchant\":3872,\"gems\":[40113,40153]},\n\t\t{\"id\":47454,\"enchant\":3606,\"gems\":[40133,40113]},\n\t\t{\"id\":45495,\"gems\":[40113]},\n\t\t{\"id\":47489,\"gems\":[40155]},\n\t\t{\"id\":45518},\n\t\t{\"id\":45466},\n\t\t{\"id\":47422,\"enchant\":3834,\"gems\":[40113]},\n\t\t{\"id\":48032,\"gems\":[40155]},\n\t\t{\"id\":45294,\"gems\":[40051]}\n\t]}`),\n}\n\nexport const P3_Preset_Affliction_Alliance = {\n\tname: 'P3 Affliction A',\n\ttooltip: BIS_TOOLTIP,\n\tenableWhen: (player: Player<Spec.SpecWarlock>) => player.getTalentTree() == 0\n\t\t\t&& player.getFaction() == Faction.Alliance,\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\n\t\t{\"id\":47789,\"enchant\":3820,\"gems\":[41285,40133]},\n\t\t{\"id\":47144,\"gems\":[40155]},\n\t\t{\"id\":47792,\"enchant\":3810,\"gems\":[40155]},\n\t\t{\"id\":47552,\"enchant\":3722,\"gems\":[40113]},\n\t\t{\"id\":47129,\"enchant\":1144,\"gems\":[40133,40155,40113]},\n\t\t{\"id\":47208,\"enchant\":2332,\"gems\":[40113,0]},\n\t\t{\"id\":47788,\"enchant\":3604,\"gems\":[40113,0]},\n\t\t{\"id\":46973,\"enchant\":3599,\"gems\":[40133,40113,40113]},\n\t\t{\"id\":47790,\"enchant\":3872,\"gems\":[40113,40155]},\n\t\t{\"id\":47097,\"enchant\":3606,\"gems\":[40133,40113]},\n\t\t{\"id\":45495,\"gems\":[40113]},\n\t\t{\"id\":47237,\"gems\":[40155]},\n\t\t{\"id\":45518},\n\t\t{\"id\":45466},\n\t\t{\"id\":46980,\"enchant\":3834,\"gems\":[40113]},\n\t\t{\"id\":47958,\"gems\":[40155]},\n\t\t{\"id\":45294,\"gems\":[40155]}\n\t]}`),\n}\n\nexport const P3_Preset_Demo_Horde = {\n\tname: 'P3 Demo H',\n\ttooltip: BIS_TOOLTIP,\n\tenableWhen: (player: Player<Spec.SpecWarlock>) => player.getTalentTree() == 1\n\t\t\t&& player.getFaction() == Faction.Horde,\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\n\t\t{\"id\":47796,\"enchant\":3820,\"gems\":[41285,40133]},\n\t\t{\"id\":45133,\"gems\":[40153]},\n\t\t{\"id\":47793,\"enchant\":3810,\"gems\":[40113]},\n\t\t{\"id\":47554,\"enchant\":3722,\"gems\":[40113]},\n\t\t{\"id\":47794,\"enchant\":1144,\"gems\":[40113,40133]},\n\t\t{\"id\":47485,\"enchant\":2332,\"gems\":[40133,0]},\n\t\t{\"id\":47797,\"enchant\":3604,\"gems\":[40113,0]},\n\t\t{\"id\":47419,\"enchant\":3599,\"gems\":[40133,40113,40113]},\n\t\t{\"id\":47435,\"enchant\":3872,\"gems\":[40113,40133,40133]},\n\t\t{\"id\":47454,\"enchant\":3606,\"gems\":[40133,40113]},\n\t\t{\"id\":45495,\"gems\":[40133]},\n\t\t{\"id\":47489,\"gems\":[40113]},\n\t\t{\"id\":45518},\n\t\t{\"id\":40255},\n\t\t{\"id\":47422,\"enchant\":3834,\"gems\":[40133]},\n\t\t{\"id\":47470},\n\t\t{\"id\":45294,\"gems\":[40113]}\n\t]}`),\n}\n\nexport const P3_Preset_Demo_Alliance = {\n\tname: 'P3 Demo A',\n\ttooltip: BIS_TOOLTIP,\n\tenableWhen: (player: Player<Spec.SpecWarlock>) => player.getTalentTree() == 1\n\t\t\t&& player.getFaction() == Faction.Alliance,\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\n\t\t{\"id\":47789,\"enchant\":3820,\"gems\":[41285,40133]},\n\t\t{\"id\":45243,\"gems\":[40113]},\n\t\t{\"id\":47792,\"enchant\":3810,\"gems\":[40153]},\n\t\t{\"id\":47553,\"enchant\":3722,\"gems\":[40113]},\n\t\t{\"id\":47791,\"enchant\":1144,\"gems\":[40153,40133]},\n\t\t{\"id\":47208,\"enchant\":2332,\"gems\":[40133,0]},\n\t\t{\"id\":47788,\"enchant\":3604,\"gems\":[40113,0]},\n\t\t{\"id\":46973,\"enchant\":3599,\"gems\":[40133,40113,40113]},\n\t\t{\"id\":47062,\"enchant\":3872,\"gems\":[40113,40133,40133]},\n\t\t{\"id\":47097,\"enchant\":3606,\"gems\":[40133,40113]},\n\t\t{\"id\":45495,\"gems\":[40133]},\n\t\t{\"id\":47237,\"gems\":[40153]},\n\t\t{\"id\":45518},\n\t\t{\"id\":40255},\n\t\t{\"id\":46980,\"enchant\":3834,\"gems\":[40133]},\n\t\t{\"id\":47146},\n\t\t{\"id\":45294,\"gems\":[40113]}\n\t]}`),\n}\n\nexport const P3_Preset_Destro_Horde = {\n\tname: 'P3 Destro H',\n\ttooltip: BIS_TOOLTIP,\n\tenableWhen: (player: Player<Spec.SpecWarlock>) => player.getTalentTree() == 2\n\t\t\t&& player.getFaction() == Faction.Horde,\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\n\t\t{\"id\":47796,\"enchant\":3820,\"gems\":[41285,40133]},\n\t\t{\"id\":47468,\"gems\":[40153]},\n\t\t{\"id\":47793,\"enchant\":3810,\"gems\":[40155]},\n\t\t{\"id\":47551,\"enchant\":3722,\"gems\":[40113]},\n\t\t{\"id\":47794,\"enchant\":1144,\"gems\":[40113,40133]},\n\t\t{\"id\":47467,\"enchant\":2332,\"gems\":[40153,0]},\n\t\t{\"id\":47797,\"enchant\":3604,\"gems\":[40113,0]},\n\t\t{\"id\":47419,\"enchant\":3599,\"gems\":[40133,40113,40113]},\n\t\t{\"id\":47435,\"enchant\":3872,\"gems\":[40113,40133,40133]},\n\t\t{\"id\":47454,\"enchant\":3606,\"gems\":[40133,40113]},\n\t\t{\"id\":45495,\"gems\":[40133]},\n\t\t{\"id\":47489,\"gems\":[40155]},\n\t\t{\"id\":45518},\n\t\t{\"id\":47477},\n\t\t{\"id\":47422,\"enchant\":3834,\"gems\":[40133]},\n\t\t{\"id\":47437},\n\t\t{\"id\":45294,\"gems\":[40113]}\n\t]}`),\n}\n\nexport const P3_Preset_Destro_Alliance = {\n\tname: 'P3 Destro A',\n\ttooltip: BIS_TOOLTIP,\n\tenableWhen: (player: Player<Spec.SpecWarlock>) => player.getTalentTree() == 2\n\t\t\t&& player.getFaction() == Faction.Alliance,\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\n\t\t{\"id\":47789,\"enchant\":3820,\"gems\":[41285,40133]},\n\t\t{\"id\":47144,\"gems\":[40155]},\n\t\t{\"id\":47792,\"enchant\":3810,\"gems\":[40155]},\n\t\t{\"id\":47552,\"enchant\":3722,\"gems\":[40113]},\n\t\t{\"id\":47129,\"enchant\":1144,\"gems\":[40133,40155,40113]},\n\t\t{\"id\":47208,\"enchant\":2332,\"gems\":[40133,0]},\n\t\t{\"id\":47788,\"enchant\":3604,\"gems\":[40113,0]},\n\t\t{\"id\":46973,\"enchant\":3599,\"gems\":[40133,40113,40113]},\n\t\t{\"id\":47790,\"enchant\":3872,\"gems\":[40113,40155]},\n\t\t{\"id\":47205,\"enchant\":3606,\"gems\":[40133,40113]},\n\t\t{\"id\":45495,\"gems\":[40133]},\n\t\t{\"id\":47237,\"gems\":[40155]},\n\t\t{\"id\":45518},\n\t\t{\"id\":47188},\n\t\t{\"id\":46980,\"enchant\":3834,\"gems\":[40133]},\n\t\t{\"id\":47958,\"gems\":[40155]},\n\t\t{\"id\":45294,\"gems\":[40155]}\n\t]}`),\n}\n\nexport const APL_Demo_Default = {\n\tname: 'Demo Default',\n\tenableWhen: (player: Player<Spec.SpecWarlock>) => player.getTalentTree() == 1,\n\trotation: SavedRotation.create({\n\t\tspecRotationOptionsJson: WarlockRotation.toJsonString(DemonologyRotation),\n\t\trotation: APLRotation.fromJsonString(`\n{\n    \"enabled\": true,\n    \"prepullActions\": [\n        { \"action\": { \"castSpell\": { \"spellId\": { \"spellId\": 57946 } } }, \"doAt\": \"-4s\" },\n        { \"action\": { \"castSpell\": { \"spellId\": { \"otherId\": \"OtherActionPotion\" } } }, \"doAt\": \"-2.5s\" },\n        { \"action\": { \"castSpell\": { \"spellId\": { \"spellId\": 47809 } } }, \"doAt\": \"-2.5s\" }\n    ],\n    \"priorityList\": [\n        { \"action\": { \"autocastOtherCooldowns\": {} } },\n        { \"action\": { \"castSpell\": { \"spellId\": { \"spellId\": 50589 } } } },\n        { \"action\": { \"condition\": { \"cmp\": {\n                        \"op\": \"OpGt\",\n                        \"lhs\": { \"remainingTime\": {} },\n                        \"rhs\": { \"const\": { \"val\": \"60s\" } }\n                    } }, \"castSpell\": { \"spellId\": { \"spellId\": 47867 } } } },\n        { \"action\": { \"multidot\": { \"spellId\": { \"spellId\": 47813 }, \"maxDots\": 1, \"maxOverlap\": { \"const\": { \"val\": \"0ms\" } } } } },\n        { \"action\": { \"condition\": { \"and\": {\n                        \"vals\": [\n                            { \"not\": { \"val\": { \"dotIsActive\": { \"spellId\": { \"spellId\": 47867 } } } } },\n                            { \"not\": { \"val\": { \"dotIsActive\": { \"spellId\": { \"spellId\": 47864 } } } } },\n                            { \"cmp\": {\n                                    \"op\": \"OpGt\",\n                                    \"lhs\": { \"remainingTime\": {} },\n                                    \"rhs\": { \"const\": { \"val\": \"22s\" } }\n                                } } ] } }, \"castSpell\": { \"spellId\": { \"spellId\": 47864 } } } },\n        { \"action\": { \"condition\": { \"and\": { \"vals\": [\n                            { \"cmp\": {\n                                    \"op\": \"OpLt\",\n                                    \"lhs\": { \"auraRemainingTime\": { \"auraId\": { \"spellId\": 63321 } } },\n                                    \"rhs\": { \"const\": { \"val\": \"3s\" } } } },\n                            { \"cmp\": {\n                                    \"op\": \"OpGt\",\n                                    \"lhs\": { \"remainingTime\": {} },\n                                    \"rhs\": { \"const\": { \"val\": \"10s\" } }\n                                } } ] } }, \"castSpell\": { \"spellId\": { \"spellId\": 57946 } } } },\n        { \"action\": { \"condition\": { \"and\": { \"vals\": [\n                            { \"cmp\": {\n                                    \"op\": \"OpLt\",\n                                    \"lhs\": { \"dotRemainingTime\": { \"spellId\": { \"spellId\": 47811 } } },\n                                    \"rhs\": { \"spellCastTime\": { \"spellId\": { \"spellId\": 47811 } } } } },\n                            { \"cmp\": {\n                                    \"op\": \"OpGe\",\n                                    \"lhs\": { \"remainingTime\": {} },\n                                    \"rhs\": { \"const\": { \"val\": \"12s\" } } } } ]\n                    } }, \"castSpell\": { \"spellId\": { \"spellId\": 47811 } } } },\n        { \"action\": { \"condition\": { \"auraIsActive\": { \"auraId\": { \"spellId\": 63167 } } }, \"castSpell\": { \"spellId\": { \"spellId\": 47825 } } } },\n        { \"action\": { \"condition\": { \"auraIsActive\": { \"auraId\": { \"spellId\": 71165 } } }, \"castSpell\": { \"spellId\": { \"spellId\": 47838 } } } },\n        { \"action\": { \"castSpell\": { \"spellId\": { \"spellId\": 47809 } } } },\n        { \"action\": { \"castSpell\": { \"spellId\": { \"spellId\": 57946 } } } }\n]}`)})}\n\nexport const APL_Destro_Default = {\n\tname: 'Destro Default',\n\tenableWhen: (player: Player<Spec.SpecWarlock>) => player.getTalentTree() == 2,\n\trotation: SavedRotation.create({\n\t\tspecRotationOptionsJson: WarlockRotation.toJsonString(DestructionRotation),\n\t\trotation: APLRotation.fromJsonString(`\n{\n    \"enabled\": true,\n    \"prepullActions\": [\n      { \"action\": { \"castSpell\": { \"spellId\": { \"spellId\": 57946 } } }, \"doAt\": \"-5s\" },\n      { \"action\": { \"castSpell\": { \"spellId\": { \"otherId\": \"OtherActionPotion\" } } }, \"doAt\": \"-3.5s\" },\n      { \"action\": { \"castSpell\": { \"spellId\": { \"spellId\": 47825 } } }, \"doAt\": \"-3.5s\" }\n    ],\n    \"priorityList\": [\n      { \"action\": { \"autocastOtherCooldowns\": {} } },\n      { \"action\": { \"castSpell\": { \"spellId\": { \"spellId\": 17962 } } } },\n      { \"action\": { \"condition\": {\n            \"cmp\": {\n              \"op\": \"OpGt\", \"lhs\": { \"remainingTime\": {} },\n              \"rhs\": { \"const\": { \"val\": \"60s\" } }\n            }\n          }, \"castSpell\": { \"spellId\": { \"spellId\": 47867 } } } },\n      { \"action\": { \"condition\": {\n            \"cmp\": {\n              \"op\": \"OpLt\",\n              \"lhs\": { \"dotRemainingTime\": { \"spellId\": { \"spellId\": 47811 } } },\n              \"rhs\": { \"spellCastTime\": { \"spellId\": { \"spellId\": 47811 } } } } },\n          \"castSpell\": { \"spellId\": { \"spellId\": 47811 } } } },\n      { \"action\": { \"condition\": {\n            \"cmp\": {\n              \"op\": \"OpLt\",\n              \"lhs\": { \"remainingTime\": {} },\n              \"rhs\": { \"const\": { \"val\": \"61s\" } } }\n          },\n          \"castSpell\": { \"spellId\": { \"spellId\": 1122 } } } },\n      { \"action\": { \"condition\": {\n            \"and\": { \"vals\": [\n                { \"cmp\": {\n                    \"op\": \"OpLt\",\n                    \"lhs\": { \"auraRemainingTime\": { \"auraId\": { \"spellId\": 63321 } } },\n                    \"rhs\": { \"const\": { \"val\": \"3s\" } } } },\n                { \"cmp\": {\n                    \"op\": \"OpGt\",\n                    \"lhs\": { \"remainingTime\": {} },\n                    \"rhs\": { \"const\": { \"val\": \"10s\" } } } }\n            ] } },\n          \"castSpell\": { \"spellId\": { \"spellId\": 57946 } } } },\n      { \"action\": { \"castSpell\": { \"spellId\": { \"spellId\": 59172 } } } },\n      { \"action\": { \"condition\": {\n            \"and\": {\n              \"vals\": [\n                { \"not\": { \"val\": { \"dotIsActive\": { \"spellId\": { \"spellId\": 47867 } } } } },\n                { \"not\": { \"val\": { \"dotIsActive\": { \"spellId\": { \"spellId\": 47864 } } } } },\n                { \"cmp\": {\n                    \"op\": \"OpGt\",\n                    \"lhs\": { \"remainingTime\": {} },\n                    \"rhs\": { \"const\": { \"val\": \"22s\" } } }\n                }\n              ] } },\n          \"castSpell\": { \"spellId\": { \"spellId\": 47864 } } } },\n      { \"action\": { \"castSpell\": { \"spellId\": { \"spellId\": 47838 } } } },\n      { \"action\": { \"castSpell\": { \"spellId\": { \"spellId\": 57946 } } } }\n    ]\n}`)})}\n","import {\n\tWarlock_Options as WarlockOptions,\n\tWarlock_Rotation_Type as RotationType,\n\tWarlock_Rotation_Preset as RotationPreset,\n\tWarlock_Rotation_PrimarySpell as PrimarySpell,\n\tWarlock_Rotation_SecondaryDot as SecondaryDot,\n\tWarlock_Rotation_SpecSpell as SpecSpell,\n\tWarlock_Rotation_Curse as Curse,\n\tWarlock_Options_WeaponImbue as WeaponImbue,\n\tWarlock_Options_Armor as Armor,\n\tWarlock_Options_Summon as Summon,\n} from '../core/proto/warlock.js';\n\nimport { Spec, Glyphs, ItemSlot } from '../core/proto/common.js';\nimport { ActionId } from '../core/proto_utils/action_id.js';\nimport { Player } from '../core/player.js';\nimport { EventID, TypedEvent } from '../core/typed_event.js';\n\nimport * as Presets from './presets.js';\nimport * as InputHelpers from '../core/components/input_helpers.js';\n\n// Configuration for spec-specific UI elements on the settings tab.\n// These don't need to be in a separate file but it keeps things cleaner.\n\nexport const ArmorInput = InputHelpers.makeSpecOptionsEnumIconInput<Spec.SpecWarlock, Armor>({\n\tfieldName: 'armor',\n\tvalues: [\n\t\t{ value: Armor.NoArmor, tooltip: 'No Armor' },\n\t\t{ actionId: ActionId.fromSpellId(47893), value: Armor.FelArmor },\n\t\t{ actionId: ActionId.fromSpellId(47889), value: Armor.DemonArmor },\n\t],\n});\n\nexport const WeaponImbueInput = InputHelpers.makeSpecOptionsEnumIconInput<Spec.SpecWarlock, WeaponImbue>({\n\tfieldName: 'weaponImbue',\n\tvalues: [\n\t\t{ value: WeaponImbue.NoWeaponImbue, tooltip: 'No Weapon Stone' },\n\t\t{ actionId: ActionId.fromItemId(41174), value: WeaponImbue.GrandFirestone },\n\t\t{ actionId: ActionId.fromItemId(41196), value: WeaponImbue.GrandSpellstone },\n\t],\n});\n\nexport const PetInput = InputHelpers.makeSpecOptionsEnumIconInput<Spec.SpecWarlock, Summon>({\n\tfieldName: 'summon',\n\tvalues: [\n\t\t{ value: Summon.NoSummon, tooltip: 'No Pet' },\n\t\t{ actionId: ActionId.fromSpellId(688), value: Summon.Imp },\n\t\t{ actionId: ActionId.fromSpellId(712), value: Summon.Succubus },\n\t\t{ actionId: ActionId.fromSpellId(691), value: Summon.Felhunter },\n\t\t{\n\t\t\tactionId: ActionId.fromSpellId(30146), value: Summon.Felguard,\n\t\t\tshowWhen: (player: Player<Spec.SpecWarlock>) => player.getTalents().summonFelguard,\n\t\t},\n\t],\n\tchangeEmitter: (player: Player<Spec.SpecWarlock>) => player.changeEmitter,\n});\n\nexport const PrimarySpellInput = InputHelpers.makeRotationEnumIconInput<Spec.SpecWarlock, PrimarySpell>({\n\tfieldName: 'primarySpell',\n\tvalues: [\n\t\t{ actionId: ActionId.fromSpellId(47809), value: PrimarySpell.ShadowBolt },\n\t\t{ actionId: ActionId.fromSpellId(47838), value: PrimarySpell.Incinerate },\n\t\t{ actionId: ActionId.fromSpellId(47836), value: PrimarySpell.Seed },\n\t],\n\tsetValue: (eventID: EventID, player: Player<Spec.SpecWarlock>, newValue: number) => {\n\t\tconst newRotation = player.getRotation();\n\t\tif (newValue == PrimarySpell.Seed && newRotation.corruption == true) {\n\t\t\tnewRotation.corruption = false\n\t\t}\n\t\tnewRotation.primarySpell = newValue\n\t\tnewRotation.preset = RotationPreset.Manual;\n\t\tplayer.setRotation(eventID, newRotation);\n\t},\n});\n\nexport const SecondaryDotInput = InputHelpers.makeRotationEnumIconInput<Spec.SpecWarlock, SecondaryDot>({\n\tfieldName: 'secondaryDot',\n\tvalues: [\n\t\t{ value: SecondaryDot.NoSecondaryDot },\n\t\t{ actionId: ActionId.fromSpellId(47811), value: SecondaryDot.Immolate },\n\t\t{\n\t\t\tactionId: ActionId.fromSpellId(47843), value: SecondaryDot.UnstableAffliction,\n\t\t\tshowWhen: (player: Player<Spec.SpecWarlock>) => player.getTalents().unstableAffliction,\n\t\t},\n\t],\n\tchangeEmitter: (player: Player<Spec.SpecWarlock>) => player.changeEmitter,\n\tsetValue: (eventID: EventID, player: Player<Spec.SpecWarlock>, newValue: number) => {\n\t\tconst newRotation = player.getRotation();\n\t\tnewRotation.secondaryDot = newValue;\n\t\tnewRotation.preset = RotationPreset.Manual;\n\t\tplayer.setRotation(eventID, newRotation);\n\t},\n});\n\nexport const SpecSpellInput = InputHelpers.makeRotationEnumIconInput<Spec.SpecWarlock, SpecSpell>({\n\tfieldName: 'specSpell',\n\tvalues: [\n\t\t{ value: SpecSpell.NoSpecSpell },\n\t\t{\n\t\t\tactionId: ActionId.fromSpellId(59164), value: SpecSpell.Haunt,\n\t\t\tshowWhen: (player: Player<Spec.SpecWarlock>) => player.getTalents().haunt,\n\t\t},\n\t\t{\n\t\t\tactionId: ActionId.fromSpellId(59172), value: SpecSpell.ChaosBolt,\n\t\t\tshowWhen: (player: Player<Spec.SpecWarlock>) => player.getTalents().chaosBolt,\n\t\t},\n\t],\n\tchangeEmitter: (player: Player<Spec.SpecWarlock>) => player.changeEmitter,\n\tshowWhen: (player: Player<Spec.SpecWarlock>) => player.getTalents().haunt || player.getTalents().chaosBolt,\n\tsetValue: (eventID: EventID, player: Player<Spec.SpecWarlock>, newValue: number) => {\n\t\tconst newRotation = player.getRotation();\n\t\tnewRotation.specSpell = newValue;\n\t\tnewRotation.preset = RotationPreset.Manual;\n\t\tplayer.setRotation(eventID, newRotation);\n\t},\n});\n\n\nexport const CorruptionSpell = {\n\ttype: 'icon' as const,\n\tid: ActionId.fromSpellId(47813),\n\tstates: 2,\n\textraCssClasses: [\n\t\t'Corruption-picker',\n\t],\n\tchangedEvent: (player: Player<Spec.SpecWarlock>) => player.changeEmitter,\n\tgetValue: (player: Player<Spec.SpecWarlock>) => player.getRotation().corruption,\n\tsetValue: (eventID: EventID, player: Player<Spec.SpecWarlock>, newValue: boolean) => {\n\t\tconst newRotation = player.getRotation();\n\t\tif (newRotation.primarySpell == PrimarySpell.Seed && newValue == true) {\n\t\t\tnewRotation.primarySpell = PrimarySpell.ShadowBolt\n\t\t}\n\t\tnewRotation.corruption = newValue;\n\t\tnewRotation.preset = RotationPreset.Manual;\n\t\tplayer.setRotation(eventID, newRotation);\n\t},\n};\n\nexport const WarlockRotationConfig = {\n\tinputs: [\n\t\t{\n\t\t\ttype: 'enum' as const,\n\n\t\t\tlabel: 'Sim presets',\n\t\t\tlabelTooltip: 'Quick switch between sim spec presets. Will UPDATE TALENTS and SPELLS to defaults.',\n\t\t\tvalues: [\n\t\t\t\t{ name: 'Affliction', value: RotationType.Affliction },\n\t\t\t\t{ name: 'Demonology', value: RotationType.Demonology },\n\t\t\t\t{ name: 'Destruction', value: RotationType.Destruction },\n\t\t\t],\n\t\t\tchangedEvent: (player: Player<Spec.SpecWarlock>) => player.rotationChangeEmitter,\n\t\t\tgetValue: (player: Player<Spec.SpecWarlock>) => player.getRotation().type,\n\t\t\tsetValue: (eventID: EventID, player: Player<Spec.SpecWarlock>, newValue: number) => {\n\t\t\t\tvar newRotation = player.getRotation();\n\t\t\t\tvar newOptions: WarlockOptions;\n\t\t\t\tvar newGlyphs: Glyphs;\n\t\t\t\tvar newTalents: string;\n\t\t\t\tif (newValue == RotationType.Affliction) {\n\t\t\t\t\tnewTalents = Presets.AfflictionTalents.data.talentsString\n\t\t\t\t\tnewGlyphs = Presets.AfflictionTalents.data.glyphs || Glyphs.create();\n\t\t\t\t\tnewRotation = Presets.AfflictionRotation\n\t\t\t\t\tnewOptions = Presets.AfflictionOptions\n\t\t\t\t} else if (newValue == RotationType.Demonology) {\n\t\t\t\t\tnewTalents = Presets.DemonologyTalents.data.talentsString\n\t\t\t\t\tnewGlyphs = Presets.DemonologyTalents.data.glyphs || Glyphs.create();\n\t\t\t\t\tnewRotation = Presets.DemonologyRotation\n\t\t\t\t\tnewOptions = Presets.DemonologyOptions\n\t\t\t\t} else if (newValue == RotationType.Destruction) {\n\t\t\t\t\tnewTalents = Presets.DestructionTalents.data.talentsString\n\t\t\t\t\tnewGlyphs = Presets.DestructionTalents.data.glyphs || Glyphs.create();\n\t\t\t\t\tnewRotation = Presets.DestructionRotation\n\t\t\t\t\tnewOptions = Presets.DestructionOptions\n\t\t\t\t}\n\t\t\t\tnewRotation.type = newValue;\n\t\t\t\tnewRotation.preset = RotationPreset.Automatic;\n\t\t\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\t\t\tplayer.setTalentsString(eventID, newTalents);\n\t\t\t\t\tplayer.setSpecOptions(eventID, newOptions);\n\t\t\t\t\tplayer.setGlyphs(eventID, newGlyphs);\n\t\t\t\t\tplayer.setRotation(eventID, newRotation);\n\t\t\t\t});\n\t\t\t},\n\t\t},\n\n\t\t{\n\t\t\ttype: 'enum' as const,\n\t\t\tlabel: 'Spell & Talent',\n\t\t\tlabelTooltip: 'Putting it on Automatic will UPDATE talents and spells to defaults.',\n\t\t\tvalues: [\n\t\t\t\t{ name: \"Manual\", value: RotationPreset.Manual },\n\t\t\t\t{ name: \"Automatic\", value: RotationPreset.Automatic },\n\t\t\t],\n\t\t\tchangedEvent: (player: Player<Spec.SpecWarlock>) => player.rotationChangeEmitter,\n\t\t\tgetValue: (player: Player<Spec.SpecWarlock>) => player.getRotation().preset,\n\t\t\tsetValue: (eventID: EventID, player: Player<Spec.SpecWarlock>, newValue: number) => {\n\t\t\t\tvar newRotation = player.getRotation();\n\t\t\t\tif (newValue == RotationPreset.Automatic) {\n\t\t\t\t\tvar newOptions: WarlockOptions;\n\t\t\t\t\tvar newGlyphs: Glyphs;\n\t\t\t\t\tvar newTalents: string;\n\t\t\t\t\tif (newRotation.type == RotationType.Affliction) {\n\t\t\t\t\t\tnewTalents = Presets.AfflictionTalents.data.talentsString\n\t\t\t\t\t\tnewGlyphs = Presets.AfflictionTalents.data.glyphs || Glyphs.create()\n\t\t\t\t\t\tnewRotation = Presets.AfflictionRotation\n\t\t\t\t\t\tnewOptions = Presets.AfflictionOptions\n\t\t\t\t\t} else if (newRotation.type == RotationType.Demonology) {\n\t\t\t\t\t\tnewTalents = Presets.DemonologyTalents.data.talentsString\n\t\t\t\t\t\tnewGlyphs = Presets.DemonologyTalents.data.glyphs || Glyphs.create()\n\t\t\t\t\t\tnewRotation = Presets.DemonologyRotation\n\t\t\t\t\t\tnewOptions = Presets.DemonologyOptions\n\t\t\t\t\t} else if (newRotation.type == RotationType.Destruction) {\n\t\t\t\t\t\tnewTalents = Presets.DestructionTalents.data.talentsString\n\t\t\t\t\t\tnewGlyphs = Presets.DestructionTalents.data.glyphs || Glyphs.create()\n\t\t\t\t\t\tnewRotation = Presets.DestructionRotation\n\t\t\t\t\t\tnewOptions = Presets.DestructionOptions\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnewRotation.preset = newValue;\n\t\t\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\t\t\tif (newValue == RotationPreset.Automatic) {\n\t\t\t\t\t\tplayer.setTalentsString(eventID, newTalents);\n\t\t\t\t\t\tplayer.setSpecOptions(eventID, newOptions);\n\t\t\t\t\t\tplayer.setGlyphs(eventID, newGlyphs);\n\t\t\t\t\t}\n\t\t\t\t\tplayer.setRotation(eventID, newRotation);\n\t\t\t\t});\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\ttype: 'enum' as const,\n\t\t\tlabel: 'Curse',\n\t\t\tlabelTooltip: 'Manual curse selection.',\n\t\t\tvalues: [\n\t\t\t\t{ name: \"None\", value: Curse.NoCurse },\n\t\t\t\t{ name: \"Elements\", value: Curse.Elements },\n\t\t\t\t{ name: \"Weakness\", value: Curse.Weakness },\n\t\t\t\t{ name: \"Doom\", value: Curse.Doom },\n\t\t\t\t{ name: \"Agony\", value: Curse.Agony },\n\t\t\t\t{ name: \"Tongues\", value: Curse.Tongues }\n\t\t\t],\n\t\t\tchangedEvent: (player: Player<Spec.SpecWarlock>) => player.rotationChangeEmitter,\n\t\t\tgetValue: (player: Player<Spec.SpecWarlock>) => player.getRotation().curse,\n\t\t\tsetValue: (eventID: EventID, player: Player<Spec.SpecWarlock>, newValue: number) => {\n\t\t\t\tconst newRotation = player.getRotation();\n\t\t\t\tnewRotation.curse = newValue;\n\t\t\t\tnewRotation.preset = RotationPreset.Manual;\n\t\t\t\tplayer.setRotation(eventID, newRotation);\n\t\t\t},\n\t\t},\n\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecWarlock>({\n\t\t\tfieldName: 'useInfernal',\n\t\t\tlabel: 'Summon Infernal',\n\t\t\tlabelTooltip: 'Casts Inferno 60s before the fight is over',\n\t\t}),\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecWarlock>({\n\t\t\tfieldName: 'detonateSeed',\n\t\t\tlabel: 'Detonate Seed on Cast',\n\t\t\tlabelTooltip: 'Simulates raid doing damage to targets such that seed detonates immediately on cast.',\n\t\t\tshowWhen: (player: Player<Spec.SpecWarlock>) => player.getRotation().primarySpell == PrimarySpell.Seed,\n\t\t}),\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecWarlock>({\n\t\t\tfieldName: 'enableWeaponSwap',\n\t\t\tlabel: 'Enable Weapon Swapping',\n\t\t\tlabelTooltip: 'Toggle on/off item swapping',\n\t\t\tshowWhen: (player: Player<Spec.SpecWarlock>) => player.getRotation().type == RotationType.Affliction\n\t\t}),\n\t\tInputHelpers.MakeItemSwapInput<Spec.SpecWarlock>({\n\t\t\tfieldName: 'weaponSwap',\n\t\t\tvalues: [\n\t\t\t\tItemSlot.ItemSlotMainHand,\n\t\t\t\tItemSlot.ItemSlotOffHand,\n\t\t\t\tItemSlot.ItemSlotRanged,\n\t\t\t],\n\t\t\tlabelTooltip: 'Start with the swapped items until Corruption has been cast, then swap back to normal gear set. If a slot is empty it will not be used in the swap',\n\t\t\tshowWhen: (player: Player<Spec.SpecWarlock>) => (player.getRotation().type == RotationType.Affliction && player.getRotation().enableWeaponSwap) || false\n\t\t}),\n\t],\n};\n","import {\n\tPartyBuffs,\n\tSpec,\n\tStat,\n} from '../core/proto/common.js';\n\nimport { Stats } from '../core/proto_utils/stats.js';\nimport { Player } from '../core/player.js';\nimport { IndividualSimUI } from '../core/individual_sim_ui.js';\nimport * as IconInputs from '../core/components/icon_inputs.js';\nimport * as OtherInputs from '../core/components/other_inputs.js';\nimport * as WarlockInputs from './inputs.js';\nimport * as Presets from './presets.js';\n\nexport class WarlockSimUI extends IndividualSimUI<Spec.SpecWarlock> {\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecWarlock>) {\n\t\tsuper(parentElem, player, {\n\t\t\tcssClass: 'warlock-sim-ui',\n\t\t\tcssScheme: 'warlock',\n\t\t\t// List any known bugs / issues here and they'll be shown on the site.\n\t\t\tknownIssues: [\n\t\t\t\t\"Drain Soul is currently disabled for APL rotations\"\n\t\t\t],\n\n\t\t\t// All stats for which EP should be calculated.\n\t\t\tepStats: [\n\t\t\t\tStat.StatIntellect,\n\t\t\t\tStat.StatSpirit,\n\t\t\t\tStat.StatSpellPower,\n\t\t\t\tStat.StatSpellHit,\n\t\t\t\tStat.StatSpellCrit,\n\t\t\t\tStat.StatSpellHaste,\n\t\t\t\tStat.StatStamina,\n\t\t\t],\n\t\t\t// Reference stat against which to calculate EP. DPS classes use either spell power or attack power.\n\t\t\tepReferenceStat: Stat.StatSpellPower,\n\t\t\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\n\t\t\tdisplayStats: [\n\t\t\t\tStat.StatHealth,\n\t\t\t\tStat.StatIntellect,\n\t\t\t\tStat.StatSpirit,\n\t\t\t\tStat.StatSpellPower,\n\t\t\t\tStat.StatSpellHit,\n\t\t\t\tStat.StatSpellCrit,\n\t\t\t\tStat.StatSpellHaste,\n\t\t\t\tStat.StatMP5,\n\t\t\t\tStat.StatStamina,\n\t\t\t],\n\n\t\t\tdefaults: {\n\t\t\t\t// Default equipped gear.\n\t\t\t\tgear: Presets.P3_Preset_Affliction_Horde.gear,\n\n\t\t\t\t// Default EP weights for sorting gear in the gear picker.\n\t\t\t\tepWeights: Stats.fromMap({\n\t\t\t\t\t[Stat.StatIntellect]: 0.18,\n\t\t\t\t\t[Stat.StatSpirit]: 0.54,\n\t\t\t\t\t[Stat.StatSpellPower]: 1,\n\t\t\t\t\t[Stat.StatSpellHit]: 0.93,\n\t\t\t\t\t[Stat.StatSpellCrit]: 0.53,\n\t\t\t\t\t[Stat.StatSpellHaste]: 0.81,\n\t\t\t\t\t[Stat.StatStamina]: 0.01,\n\t\t\t\t}),\n\t\t\t\t// Default consumes settings.\n\t\t\t\tconsumes: Presets.DefaultConsumes,\n\n\t\t\t\t// Default rotation settings.\n\t\t\t\trotation: Presets.AfflictionRotation,\n\t\t\t\t// Default talents.\n\t\t\t\ttalents: Presets.AfflictionTalents.data,\n\t\t\t\t// Default spec-specific settings.\n\t\t\t\tspecOptions: Presets.AfflictionOptions,\n\n\t\t\t\t// Default buffs and debuffs settings.\n\t\t\t\traidBuffs: Presets.DefaultRaidBuffs,\n\n\t\t\t\tpartyBuffs: PartyBuffs.create({}),\n\n\t\t\t\tindividualBuffs: Presets.DefaultIndividualBuffs,\n\n\t\t\t\tdebuffs: Presets.DefaultDebuffs,\n\n\t\t\t\tother: Presets.OtherDefaults,\n\t\t\t},\n\n\t\t\t// IconInputs to include in the 'Player' section on the settings tab.\n\t\t\tplayerIconInputs: [\n\t\t\t\tWarlockInputs.PetInput,\n\t\t\t\tWarlockInputs.ArmorInput,\n\t\t\t\tWarlockInputs.WeaponImbueInput,\n\t\t\t],\n\t\t\t// Inputs to include in the 'Rotation' section on the settings tab.\n\t\t\trotationIconInputs: [\n\t\t\t\tWarlockInputs.PrimarySpellInput,\n\t\t\t\tWarlockInputs.CorruptionSpell,\n\t\t\t\tWarlockInputs.SecondaryDotInput,\n\t\t\t\tWarlockInputs.SpecSpellInput,\n\t\t\t],\n\t\t\trotationInputs: WarlockInputs.WarlockRotationConfig,\n\n\t\t\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\n\t\t\tincludeBuffDebuffInputs: [\n\t\t\t\tIconInputs.ReplenishmentBuff,\n\t\t\t\tIconInputs.MajorArmorDebuff,\n\t\t\t\tIconInputs.MinorArmorDebuff,\n\t\t\t\tIconInputs.PhysicalDamageDebuff,\n\t\t\t\tIconInputs.MeleeHasteBuff,\n\t\t\t\tIconInputs.MeleeCritBuff,\n\t\t\t\tIconInputs.MP5Buff,\n\t\t\t\tIconInputs.AttackPowerPercentBuff,\n\t\t\t\tIconInputs.AttackPowerBuff,\n\t\t\t\tIconInputs.StrengthAndAgilityBuff,\n\t\t\t\tIconInputs.StaminaBuff,\n\t\t\t],\n\t\t\texcludeBuffDebuffInputs: [\n\t\t\t],\n\t\t\tpetConsumeInputs: [\n\t\t\t\tIconInputs.SpicedMammothTreats,\n\t\t\t],\n\t\t\t// Inputs to include in the 'Other' section on the settings tab.\n\t\t\totherInputs: {\n\t\t\t\tinputs: [\n\t\t\t\t\tOtherInputs.DistanceFromTarget,\n\t\t\t\t\tOtherInputs.TankAssignment,\n\t\t\t\t],\n\t\t\t},\n\t\t\tencounterPicker: {\n\t\t\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\n\t\t\t\tshowExecuteProportion: false,\n\t\t\t},\n\n\t\t\tpresets: {\n\t\t\t\t// Preset talents that the user can quickly select.\n\t\t\t\ttalents: [\n\t\t\t\t\tPresets.AfflictionTalents,\n\t\t\t\t\tPresets.DemonologyTalents,\n\t\t\t\t\tPresets.DestructionTalents,\n\t\t\t\t],\n\t\t\t\t// Preset rotations that the user can quickly select.\n\t\t\t\trotations: [\n\t\t\t\t\tPresets.APL_Demo_Default,\n\t\t\t\t\tPresets.APL_Destro_Default,\n\t\t\t\t],\n\n\t\t\t\t// Preset gear configurations that the user can quickly select.\n\t\t\t\tgear: [\n\t\t\t\t\tPresets.SWP_BIS,\n\t\t\t\t\tPresets.P1_PreBiS_11,\n\t\t\t\t\tPresets.P1_PreBiS_14,\n\t\t\t\t\tPresets.P1_Preset_Affliction,\n\t\t\t\t\tPresets.P1_Preset_Demo_Destro,\n\t\t\t\t\tPresets.P2_Preset_Affliction,\n\t\t\t\t\tPresets.P2_Preset_Demo_Destro,\n\t\t\t\t\tPresets.P3_Preset_Affliction_Horde,\n\t\t\t\t\tPresets.P3_Preset_Affliction_Alliance,\n\t\t\t\t\tPresets.P3_Preset_Demo_Horde,\n\t\t\t\t\tPresets.P3_Preset_Demo_Alliance,\n\t\t\t\t\tPresets.P3_Preset_Destro_Horde,\n\t\t\t\t\tPresets.P3_Preset_Destro_Alliance,\n\t\t\t\t],\n\t\t\t},\n\t\t});\n\t}\n}\n"],"names":["BIS_TOOLTIP","AfflictionTalents","name","data","SavedTalents","create","talentsString","glyphs","Glyphs","major1","MajorGlyph","GlyphOfQuickDecay","major2","GlyphOfLifeTap","major3","GlyphOfHaunt","minor1","MinorGlyph","GlyphOfSouls","minor2","GlyphOfDrainSoul","minor3","GlyphOfSubjugateDemon","DemonologyTalents","GlyphOfFelguard","DestructionTalents","GlyphOfConflagrate","GlyphOfIncinerate","AfflictionRotation","WarlockRotation","primarySpell","PrimarySpell","ShadowBolt","secondaryDot","SecondaryDot","UnstableAffliction","specSpell","SpecSpell","Haunt","curse","Curse","Agony","corruption","useInfernal","detonateSeed","DemonologyRotation","Immolate","NoSpecSpell","Doom","DestructionRotation","Incinerate","ChaosBolt","AfflictionOptions","WarlockOptions","armor","Armor","FelArmor","summon","Summon","Felhunter","weaponImbue","WeaponImbue","GrandSpellstone","DemonologyOptions","Felguard","DestructionOptions","Imp","GrandFirestone","DefaultConsumes","Consumes","flask","Flask","FlaskOfTheFrostWyrm","food","Food","FoodFishFeast","petFood","PetFood","PetFoodSpicedMammothTreats","defaultPotion","Potions","PotionOfWildMagic","prepopPotion","DefaultRaidBuffs","RaidBuffs","giftOfTheWild","TristateEffect","TristateEffectImproved","powerWordFortitude","strengthOfEarthTotem","arcaneBrilliance","divineSpirit","trueshotAura","leaderOfThePack","icyTalons","totemOfWrath","moonkinAura","wrathOfAirTotem","sanctifiedRetribution","bloodlust","demonicPact","DefaultIndividualBuffs","IndividualBuffs","blessingOfKings","blessingOfWisdom","blessingOfMight","vampiricTouch","DefaultDebuffs","Debuffs","sunderArmor","faerieFire","bloodFrenzy","ebonPlaguebringer","heartOfTheCrusader","judgementOfWisdom","shadowMastery","OtherDefaults","distanceFromTarget","SWP_BIS","gear","EquipmentSpec","fromJsonString","P1_PreBiS_11","tooltip","enableWhen","player","getTalentTree","P1_Preset_Demo_Destro","P1_Preset_Affliction","P1_PreBiS_14","P2_Preset_Affliction","P2_Preset_Demo_Destro","P3_Preset_Affliction_Horde","getFaction","Faction","Horde","P3_Preset_Affliction_Alliance","Alliance","P3_Preset_Demo_Horde","P3_Preset_Demo_Alliance","P3_Preset_Destro_Horde","P3_Preset_Destro_Alliance","APL_Demo_Default","rotation","SavedRotation","specRotationOptionsJson","toJsonString","APLRotation","APL_Destro_Default","ArmorInput","InputHelpers.makeSpecOptionsEnumIconInput","fieldName","values","value","NoArmor","actionId","ActionId","fromSpellId","DemonArmor","WeaponImbueInput","NoWeaponImbue","fromItemId","PetInput","NoSummon","Succubus","showWhen","getTalents","summonFelguard","changeEmitter","PrimarySpellInput","InputHelpers.makeRotationEnumIconInput","Seed","setValue","eventID","newValue","newRotation","getRotation","preset","RotationPreset","Manual","setRotation","SecondaryDotInput","NoSecondaryDot","unstableAffliction","SpecSpellInput","haunt","chaosBolt","CorruptionSpell","type","id","states","extraCssClasses","changedEvent","getValue","WarlockRotationConfig","inputs","label","labelTooltip","RotationType","Affliction","Demonology","Destruction","rotationChangeEmitter","newOptions","newGlyphs","newTalents","Presets.AfflictionTalents","Presets.AfflictionRotation","Presets.AfflictionOptions","Presets.DemonologyTalents","Presets.DemonologyRotation","Presets.DemonologyOptions","Presets.DestructionTalents","Presets.DestructionRotation","Presets.DestructionOptions","Automatic","TypedEvent","freezeAllAndDo","setTalentsString","setSpecOptions","setGlyphs","NoCurse","Elements","Weakness","Tongues","InputHelpers.makeRotationBooleanInput","InputHelpers.MakeItemSwapInput","ItemSlot","ItemSlotMainHand","ItemSlotOffHand","ItemSlotRanged","enableWeaponSwap","WarlockSimUI","IndividualSimUI","constructor","parentElem","super","cssClass","cssScheme","knownIssues","epStats","Stat","StatIntellect","StatSpirit","StatSpellPower","StatSpellHit","StatSpellCrit","StatSpellHaste","StatStamina","epReferenceStat","displayStats","StatHealth","StatMP5","defaults","Presets.P3_Preset_Affliction_Horde","epWeights","Stats","fromMap","consumes","Presets.DefaultConsumes","talents","specOptions","raidBuffs","Presets.DefaultRaidBuffs","partyBuffs","PartyBuffs","individualBuffs","Presets.DefaultIndividualBuffs","debuffs","Presets.DefaultDebuffs","other","Presets.OtherDefaults","playerIconInputs","WarlockInputs.PetInput","WarlockInputs.ArmorInput","WarlockInputs.WeaponImbueInput","rotationIconInputs","WarlockInputs.PrimarySpellInput","WarlockInputs.CorruptionSpell","WarlockInputs.SecondaryDotInput","WarlockInputs.SpecSpellInput","rotationInputs","WarlockInputs.WarlockRotationConfig","includeBuffDebuffInputs","IconInputs.ReplenishmentBuff","IconInputs.MajorArmorDebuff","IconInputs.MinorArmorDebuff","IconInputs.PhysicalDamageDebuff","IconInputs.MeleeHasteBuff","IconInputs.MeleeCritBuff","IconInputs.MP5Buff","IconInputs.AttackPowerPercentBuff","IconInputs.AttackPowerBuff","IconInputs.StrengthAndAgilityBuff","IconInputs.StaminaBuff","excludeBuffDebuffInputs","petConsumeInputs","IconInputs.SpicedMammothTreats","otherInputs","OtherInputs.DistanceFromTarget","OtherInputs.TankAssignment","encounterPicker","showExecuteProportion","presets","rotations","Presets.APL_Demo_Default","Presets.APL_Destro_Default","Presets.SWP_BIS","Presets.P1_PreBiS_11","Presets.P1_PreBiS_14","Presets.P1_Preset_Affliction","Presets.P1_Preset_Demo_Destro","Presets.P2_Preset_Affliction","Presets.P2_Preset_Demo_Destro","Presets.P3_Preset_Affliction_Alliance","Presets.P3_Preset_Demo_Horde","Presets.P3_Preset_Demo_Alliance","Presets.P3_Preset_Destro_Horde","Presets.P3_Preset_Destro_Alliance"],"mappings":"ifAiCO,MAAMA,EAAc,mIAKdC,GAAoB,CAChCC,KAAM,aACNC,KAAMC,EAAaC,OAAO,CACzBC,cAAe,0CACfC,OAAQC,EAAOH,OAAO,CACrBI,OAAQC,EAAWC,kBACnBC,OAAQF,EAAWG,eACnBC,OAAQJ,EAAWK,aACnBC,OAAQC,EAAWC,aACnBC,OAAQF,EAAWG,iBACnBC,OAAQJ,EAAWK,2BAKTC,GAAoB,CAChCrB,KAAM,aACNC,KAAMC,EAAaC,OAAO,CACzBC,cAAe,yCACfC,OAAQC,EAAOH,OAAO,CACrBI,OAAQC,EAAWG,eACnBD,OAAQF,EAAWC,kBACnBG,OAAQJ,EAAWc,gBACnBR,OAAQC,EAAWC,aACnBC,OAAQF,EAAWG,iBACnBC,OAAQJ,EAAWK,2BAKTG,GAAqB,CACjCvB,KAAM,cACNC,KAAMC,EAAaC,OAAO,CACzBC,cAAe,0CACfC,OAAQC,EAAOH,OAAO,CACrBI,OAAQC,EAAWgB,mBACnBd,OAAQF,EAAWG,eACnBC,OAAQJ,EAAWiB,kBACnBX,OAAQC,EAAWC,aACnBC,OAAQF,EAAWG,iBACnBC,OAAQJ,EAAWK,2BAKTM,GAAqBC,EAAgBxB,OAAO,CACxDyB,aAAcC,EAAaC,WAC3BC,aAAcC,EAAaC,mBAC3BC,UAAWC,EAAUC,MACrBC,MAAOC,EAAMC,MACbC,YAAY,EACZC,aAAa,EACbC,cAAc,IAGFC,GAAqBhB,EAAgBxB,OAAO,CACxDyB,aAAcC,EAAaC,WAC3BC,aAAcC,EAAaY,SAC3BV,UAAWC,EAAUU,YACrBR,MAAOC,EAAMQ,KACbN,YAAY,EACZC,aAAa,EACbC,cAAc,IAGFK,GAAsBpB,EAAgBxB,OAAO,CACzDyB,aAAcC,EAAamB,WAC3BjB,aAAcC,EAAaY,SAC3BV,UAAWC,EAAUc,UACrBZ,MAAOC,EAAMQ,KACbN,YAAY,EACZC,aAAa,EACbC,cAAc,IAGFQ,GAAoBC,EAAehD,OAAO,CACtDiD,MAAOC,EAAMC,SACbC,OAAQC,EAAOC,UACfC,YAAaC,EAAYC,kBAGbC,GAAoBV,EAAehD,OAAO,CACtDiD,MAAOC,EAAMC,SACbC,OAAQC,EAAOM,SACfJ,YAAaC,EAAYC,kBAGbG,GAAqBZ,EAAehD,OAAO,CACvDiD,MAAOC,EAAMC,SACbC,OAAQC,EAAOQ,IACfN,YAAaC,EAAYM,iBAGbC,GAAkBC,EAAShE,OAAO,CAC9CiE,MAAOC,EAAMC,oBACbC,KAAMC,EAAKC,cACXC,QAASC,EAAQC,2BACjBC,cAAeC,EAAQC,kBACvBC,aAAcF,EAAQC,oBAGVE,GAAmBC,EAAU/E,OAAO,CAChDgF,cAAeC,EAAeC,uBAC9BC,mBAAoBF,EAAeC,uBACnCE,qBAAsBH,EAAeC,uBACrCG,kBAAkB,EAClBC,cAAc,EACdC,cAAc,EACdC,gBAAiBP,EAAeC,uBAChCO,WAAW,EACXC,cAAc,EACdC,YAAaV,EAAeC,uBAC5BU,iBAAiB,EACjBC,uBAAuB,EACvBC,WAAW,EACXC,YAAa,MAGDC,GAAyBC,EAAgBjG,OAAO,CAC5DkG,iBAAiB,EACjBC,iBAAkBlB,EAAeC,uBACjCkB,gBAAiBnB,EAAeC,uBAChCmB,eAAe,IAGqBJ,EAAgBjG,OAAO,CAC3DkG,iBAAiB,EACjBC,iBAAkBlB,EAAeC,uBACjCkB,gBAAiBnB,EAAeC,yBAGpB,MAAAoB,GAAiBC,EAAQvG,OAAO,CAC5CwG,aAAa,EACbC,WAAYxB,EAAeC,uBAC3BwB,aAAa,EACbC,mBAAmB,EACnBC,oBAAoB,EACpBC,mBAAmB,IAGSN,EAAQvG,OAAO,CAC3CwG,aAAa,EACbC,WAAYxB,EAAeC,uBAC3BwB,aAAa,EACbC,mBAAmB,EACnBC,oBAAoB,EACpBC,mBAAmB,EACnBC,eAAe,IAGT,MAAMC,GAAgB,CAC5BC,mBAAoB,IAGRC,GAAU,CACtBpH,KAAM,oBACNqH,KAAMC,EAAcC,eAAe,msBAoBvBC,GAAe,CAC3BxH,KAAM,sBACNyH,QAAS3H,EACT4H,WAAaC,GAA+D,GAA1BA,EAAOC,gBACzDP,KAAMC,EAAcC,eAAe,gqBAoBvBM,GAAwB,CACpC7H,KAAM,mBACNyH,QAAS3H,EACT4H,WAAaC,GAAqCA,EAAOC,gBAAkB,EAC3EP,KAAMC,EAAcC,eAAe,umBAuBvBO,GAAuB,CACnC9H,KAAM,gBACNyH,QAAS3H,EACT4H,WAAaC,GAA+D,GAA1BA,EAAOC,gBACzDP,KAAMC,EAAcC,eAAe,umBAsBvBQ,GAAe,CAC3B/H,KAAM,WACNyH,QAAS3H,EACT4H,WAAaC,GAAqCA,EAAOC,gBAAkB,EAC3EP,KAAMC,EAAcC,eAAe,gqBAqBvBS,GAAuB,CACnChI,KAAM,gBACNyH,QAAS3H,EACT4H,WAAaC,GAA+D,GAA1BA,EAAOC,gBACzDP,KAAMC,EAAcC,eAAe,ovBAqBvBU,GAAwB,CACpCjI,KAAM,mBACNyH,QAAS3H,EACT4H,WAAaC,GAAqCA,EAAOC,gBAAkB,EAC3EP,KAAMC,EAAcC,eAAe,ovBAqBvBW,GAA6B,CACzClI,KAAM,kBACNyH,QAAS3H,EACT4H,WAAaC,GAA+D,GAA1BA,EAAOC,iBACpDD,EAAOQ,cAAgBC,EAAQC,MACpChB,KAAMC,EAAcC,eAAe,6vBAqBvBe,GAAgC,CAC5CtI,KAAM,kBACNyH,QAAS3H,EACT4H,WAAaC,GAA+D,GAA1BA,EAAOC,iBACpDD,EAAOQ,cAAgBC,EAAQG,SACpClB,KAAMC,EAAcC,eAAe,6vBAqBvBiB,GAAuB,CACnCxI,KAAM,YACNyH,QAAS3H,EACT4H,WAAaC,GAA+D,GAA1BA,EAAOC,iBACpDD,EAAOQ,cAAgBC,EAAQC,MACpChB,KAAMC,EAAcC,eAAe,8uBAqBvBkB,GAA0B,CACtCzI,KAAM,YACNyH,QAAS3H,EACT4H,WAAaC,GAA+D,GAA1BA,EAAOC,iBACpDD,EAAOQ,cAAgBC,EAAQG,SACpClB,KAAMC,EAAcC,eAAe,8uBAqBvBmB,GAAyB,CACrC1I,KAAM,cACNyH,QAAS3H,EACT4H,WAAaC,GAA+D,GAA1BA,EAAOC,iBACpDD,EAAOQ,cAAgBC,EAAQC,MACpChB,KAAMC,EAAcC,eAAe,8uBAqBvBoB,GAA4B,CACxC3I,KAAM,cACNyH,QAAS3H,EACT4H,WAAaC,GAA+D,GAA1BA,EAAOC,iBACpDD,EAAOQ,cAAgBC,EAAQG,SACpClB,KAAMC,EAAcC,eAAe,6vBAqBvBqB,GAAmB,CAC/B5I,KAAM,eACN0H,WAAaC,GAA+D,GAA1BA,EAAOC,gBACzDiB,SAAUC,EAAc3I,OAAO,CAC9B4I,wBAAyBpH,EAAgBqH,aAAarG,IACtDkG,SAAUI,EAAY1B,eAAe,0xGAoD1B2B,GAAqB,CACjClJ,KAAM,iBACN0H,WAAaC,GAA+D,GAA1BA,EAAOC,gBACzDiB,SAAUC,EAAc3I,OAAO,CAC9B4I,wBAAyBpH,EAAgBqH,aAAajG,IACtD8F,SAAUI,EAAY1B,eAAe,snFChjB1B4B,GAAaC,EAAmE,CAC5FC,UAAW,QACXC,OAAQ,CACP,CAAEC,MAAOlG,EAAMmG,QAAS/B,QAAS,YACjC,CAAEgC,SAAUC,EAASC,YAAY,OAAQJ,MAAOlG,EAAMC,UACtD,CAAEmG,SAAUC,EAASC,YAAY,OAAQJ,MAAOlG,EAAMuG,eAI3CC,GAAmBT,EAAyE,CACxGC,UAAW,cACXC,OAAQ,CACP,CAAEC,MAAO5F,EAAYmG,cAAerC,QAAS,mBAC7C,CAAEgC,SAAUC,EAASK,WAAW,OAAQR,MAAO5F,EAAYM,gBAC3D,CAAEwF,SAAUC,EAASK,WAAW,OAAQR,MAAO5F,EAAYC,oBAIhDoG,GAAWZ,EAAoE,CAC3FC,UAAW,SACXC,OAAQ,CACP,CAAEC,MAAO/F,EAAOyG,SAAUxC,QAAS,UACnC,CAAEgC,SAAUC,EAASC,YAAY,KAAMJ,MAAO/F,EAAOQ,KACrD,CAAEyF,SAAUC,EAASC,YAAY,KAAMJ,MAAO/F,EAAO0G,UACrD,CAAET,SAAUC,EAASC,YAAY,KAAMJ,MAAO/F,EAAOC,WACrD,CACCgG,SAAUC,EAASC,YAAY,OAAQJ,MAAO/F,EAAOM,SACrDqG,SAAWxC,GAAqCA,EAAOyC,aAAaC,iBAGtEC,cAAgB3C,GAAqCA,EAAO2C,gBAGhDC,GAAoBC,EAAuE,CACvGnB,UAAW,eACXC,OAAQ,CACP,CAAEG,SAAUC,EAASC,YAAY,OAAQJ,MAAO1H,EAAaC,YAC7D,CAAE2H,SAAUC,EAASC,YAAY,OAAQJ,MAAO1H,EAAamB,YAC7D,CAAEyG,SAAUC,EAASC,YAAY,OAAQJ,MAAO1H,EAAa4I,OAE9DC,SAAU,CAACC,EAAkBhD,EAAkCiD,KACxD,MAAAC,EAAclD,EAAOmD,cACvBF,GAAY/I,EAAa4I,MAAkC,GAA1BI,EAAYrI,aAChDqI,EAAYrI,YAAa,GAE1BqI,EAAYjJ,aAAegJ,EAC3BC,EAAYE,OAASC,EAAeC,OAC7BtD,EAAAuD,YAAYP,EAASE,EAAW,IAI5BM,GAAoBX,EAAuE,CACvGnB,UAAW,eACXC,OAAQ,CACP,CAAEC,MAAOvH,EAAaoJ,gBACtB,CAAE3B,SAAUC,EAASC,YAAY,OAAQJ,MAAOvH,EAAaY,UAC7D,CACC6G,SAAUC,EAASC,YAAY,OAAQJ,MAAOvH,EAAaC,mBAC3DkI,SAAWxC,GAAqCA,EAAOyC,aAAaiB,qBAGtEf,cAAgB3C,GAAqCA,EAAO2C,cAC5DI,SAAU,CAACC,EAAkBhD,EAAkCiD,KACxD,MAAAC,EAAclD,EAAOmD,cAC3BD,EAAY9I,aAAe6I,EAC3BC,EAAYE,OAASC,EAAeC,OAC7BtD,EAAAuD,YAAYP,EAASE,EAAW,IAI5BS,GAAiBd,EAAoE,CACjGnB,UAAW,YACXC,OAAQ,CACP,CAAEC,MAAOpH,EAAUU,aACnB,CACC4G,SAAUC,EAASC,YAAY,OAAQJ,MAAOpH,EAAUC,MACxD+H,SAAWxC,GAAqCA,EAAOyC,aAAamB,OAErE,CACC9B,SAAUC,EAASC,YAAY,OAAQJ,MAAOpH,EAAUc,UACxDkH,SAAWxC,GAAqCA,EAAOyC,aAAaoB,YAGtElB,cAAgB3C,GAAqCA,EAAO2C,cAC5DH,SAAWxC,GAAqCA,EAAOyC,aAAamB,OAAS5D,EAAOyC,aAAaoB,UACjGd,SAAU,CAACC,EAAkBhD,EAAkCiD,KACxD,MAAAC,EAAclD,EAAOmD,cAC3BD,EAAY3I,UAAY0I,EACxBC,EAAYE,OAASC,EAAeC,OAC7BtD,EAAAuD,YAAYP,EAASE,EAAW,IAK5BY,GAAkB,CAC9BC,KAAM,OACNC,GAAIjC,EAASC,YAAY,OACzBiC,OAAQ,EACRC,gBAAiB,CAChB,qBAEDC,aAAenE,GAAqCA,EAAO2C,cAC3DyB,SAAWpE,GAAqCA,EAAOmD,cAActI,WACrEkI,SAAU,CAACC,EAAkBhD,EAAkCiD,KACxD,MAAAC,EAAclD,EAAOmD,cACvBD,EAAYjJ,cAAgBC,EAAa4I,MAAoB,GAAZG,IACpDC,EAAYjJ,aAAeC,EAAaC,YAEzC+I,EAAYrI,WAAaoI,EACzBC,EAAYE,OAASC,EAAeC,OAC7BtD,EAAAuD,YAAYP,EAASE,EAAW,GAI5BmB,GAAwB,CACpCC,OAAQ,CACP,CACCP,KAAM,OAENQ,MAAO,cACPC,aAAc,qFACd7C,OAAQ,CACP,CAAEtJ,KAAM,aAAcuJ,MAAO6C,EAAaC,YAC1C,CAAErM,KAAM,aAAcuJ,MAAO6C,EAAaE,YAC1C,CAAEtM,KAAM,cAAeuJ,MAAO6C,EAAaG,cAE5CT,aAAenE,GAAqCA,EAAO6E,sBAC3DT,SAAWpE,GAAqCA,EAAOmD,cAAcY,KACrEhB,SAAU,CAACC,EAAkBhD,EAAkCiD,KAC1D,IACA6B,EACAC,EACAC,EAHA9B,EAAclD,EAAOmD,cAIrBF,GAAYwB,EAAaC,YACfM,EAAAC,GAA0B3M,KAAKG,cAC5CsM,EAAYE,GAA0B3M,KAAKI,QAAUC,EAAOH,SAC9C0M,EAAAA,GACDC,EAAAA,IACHlC,GAAYwB,EAAaE,YACtBK,EAAAI,GAA0B9M,KAAKG,cAC5CsM,EAAYK,GAA0B9M,KAAKI,QAAUC,EAAOH,SAC9C6M,EAAAA,GACDC,EAAAA,IACHrC,GAAYwB,EAAaG,cACtBI,EAAAO,GAA2BjN,KAAKG,cAC7CsM,EAAYQ,GAA2BjN,KAAKI,QAAUC,EAAOH,SAC/CgN,EAAAA,GACDC,EAAAA,IAEdvC,EAAYa,KAAOd,EACnBC,EAAYE,OAASC,EAAeqC,UACpCC,EAAWC,gBAAe,KAClB5F,EAAA6F,iBAAiB7C,EAASgC,GAC1BhF,EAAA8F,eAAe9C,EAAS8B,GACxB9E,EAAA+F,UAAU/C,EAAS+B,GACnB/E,EAAAuD,YAAYP,EAASE,EAAW,GACvC,GAIH,CACCa,KAAM,OACNQ,MAAO,iBACPC,aAAc,sEACd7C,OAAQ,CACP,CAAEtJ,KAAM,SAAUuJ,MAAOyB,EAAeC,QACxC,CAAEjL,KAAM,YAAauJ,MAAOyB,EAAeqC,YAE5CvB,aAAenE,GAAqCA,EAAO6E,sBAC3DT,SAAWpE,GAAqCA,EAAOmD,cAAcC,OACrEL,SAAU,CAACC,EAAkBhD,EAAkCiD,KAC1D,IAEC6B,EACAC,EACAC,EAJD9B,EAAclD,EAAOmD,cACrBF,GAAYI,EAAeqC,YAI1BxC,EAAYa,MAAQU,EAAaC,YACvBM,EAAAC,GAA0B3M,KAAKG,cAC5CsM,EAAYE,GAA0B3M,KAAKI,QAAUC,EAAOH,SAC9C0M,EAAAA,GACDC,EAAAA,IACHjC,EAAYa,MAAQU,EAAaE,YAC9BK,EAAAI,GAA0B9M,KAAKG,cAC5CsM,EAAYK,GAA0B9M,KAAKI,QAAUC,EAAOH,SAC9C6M,EAAAA,GACDC,EAAAA,IACHpC,EAAYa,MAAQU,EAAaG,cAC9BI,EAAAO,GAA2BjN,KAAKG,cAC7CsM,EAAYQ,GAA2BjN,KAAKI,QAAUC,EAAOH,SAC/CgN,EAAAA,GACDC,EAAAA,KAGfvC,EAAYE,OAASH,EACrB0C,EAAWC,gBAAe,KACrB3C,GAAYI,EAAeqC,YACvB1F,EAAA6F,iBAAiB7C,EAASgC,GAC1BhF,EAAA8F,eAAe9C,EAAS8B,GACxB9E,EAAA+F,UAAU/C,EAAS+B,IAEpB/E,EAAAuD,YAAYP,EAASE,EAAW,GACvC,GAGH,CACCa,KAAM,OACNQ,MAAO,QACPC,aAAc,0BACd7C,OAAQ,CACP,CAAEtJ,KAAM,OAAQuJ,MAAOjH,EAAMqL,SAC7B,CAAE3N,KAAM,WAAYuJ,MAAOjH,EAAMsL,UACjC,CAAE5N,KAAM,WAAYuJ,MAAOjH,EAAMuL,UACjC,CAAE7N,KAAM,OAAQuJ,MAAOjH,EAAMQ,MAC7B,CAAE9C,KAAM,QAASuJ,MAAOjH,EAAMC,OAC9B,CAAEvC,KAAM,UAAWuJ,MAAOjH,EAAMwL,UAEjChC,aAAenE,GAAqCA,EAAO6E,sBAC3DT,SAAWpE,GAAqCA,EAAOmD,cAAczI,MACrEqI,SAAU,CAACC,EAAkBhD,EAAkCiD,KACxD,MAAAC,EAAclD,EAAOmD,cAC3BD,EAAYxI,MAAQuI,EACpBC,EAAYE,OAASC,EAAeC,OAC7BtD,EAAAuD,YAAYP,EAASE,EAAW,GAIzCkD,EAAwD,CACvD1E,UAAW,cACX6C,MAAO,kBACPC,aAAc,+CAEf4B,EAAwD,CACvD1E,UAAW,eACX6C,MAAO,wBACPC,aAAc,uFACdhC,SAAWxC,GAAqCA,EAAOmD,cAAclJ,cAAgBC,EAAa4I,OAEnGsD,EAAwD,CACvD1E,UAAW,mBACX6C,MAAO,yBACPC,aAAc,8BACdhC,SAAWxC,GAAqCA,EAAOmD,cAAcY,MAAQU,EAAaC,aAE3F2B,EAAiD,CAChD3E,UAAW,aACXC,OAAQ,CACP2E,EAASC,iBACTD,EAASE,gBACTF,EAASG,gBAEVjC,aAAc,qJACdhC,SAAWxC,GAAsCA,EAAOmD,cAAcY,MAAQU,EAAaC,YAAc1E,EAAOmD,cAAcuD,mBAAqB,MCrQ/I,MAAMC,WAAqBC,EACjCC,YAAYC,EAAyB9G,GACpC+G,MAAMD,EAAY9G,EAAQ,CACzBgH,SAAU,iBACVC,UAAW,UAEXC,YAAa,CACZ,sDAIDC,QAAS,CACRC,EAAKC,cACLD,EAAKE,WACLF,EAAKG,eACLH,EAAKI,aACLJ,EAAKK,cACLL,EAAKM,eACLN,EAAKO,aAGNC,gBAAiBR,EAAKG,eAEtBM,aAAc,CACbT,EAAKU,WACLV,EAAKC,cACLD,EAAKE,WACLF,EAAKG,eACLH,EAAKI,aACLJ,EAAKK,cACLL,EAAKM,eACLN,EAAKW,QACLX,EAAKO,aAGNK,SAAU,CAETtI,KAAMuI,GAAmCvI,KAGzCwI,UAAWC,EAAMC,QAAQ,CACxB,CAAChB,EAAKC,eAAgB,IACtB,CAACD,EAAKE,YAAa,IACnB,CAACF,EAAKG,gBAAiB,EACvB,CAACH,EAAKI,cAAe,IACrB,CAACJ,EAAKK,eAAgB,IACtB,CAACL,EAAKM,gBAAiB,IACvB,CAACN,EAAKO,aAAc,MAGrBU,SAAUC,GAGVpH,SAAUgE,GAEVqD,QAAStD,GAA0B3M,KAEnCkQ,YAAarD,GAGbsD,UAAWC,GAEXC,WAAYC,EAAWpQ,OAAO,IAE9BqQ,gBAAiBC,GAEjBC,QAASC,GAETC,MAAOC,IAIRC,iBAAkB,CACjBC,GACAC,GACAC,IAGDC,mBAAoB,CACnBC,GACAC,GACAC,GACAC,IAEDC,eAAgBC,GAGhBC,wBAAyB,CACxBC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEDC,wBAAyB,GAEzBC,iBAAkB,CACjBC,GAGDC,YAAa,CACZvG,OAAQ,CACPwG,EACAC,IAGFC,gBAAiB,CAEhBC,uBAAuB,GAGxBC,QAAS,CAER3C,QAAS,CACRtD,GACAG,GACAG,IAGD4F,UAAW,CACVC,GACAC,IAID3L,KAAM,CACL4L,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACA3D,GACA4D,GACAC,GACAC,GACAC,GACAC,MAIJ"}